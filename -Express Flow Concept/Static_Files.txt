# Embedded static file with templates.
    - before that you have to mention thr dir that contains your static files.
    - mention means invoke built-in express.static() middlware function that tell express_app where to fetch all static files.
    * its better you give your absolute path using path.join(process.cwd(), "static_folder_name")
    > app.use(express.static("public")) ==> relative_path
    > app.use(express.static(join(process.cwd(), "public"))) ==> absolute_path
    > app.use('/static',express.static(join(process.cwd(), "public"))) ==> virtual_path
        <style src="css/style1.css"><style>
    > app.use(express.static(join(process.cwd(), "public/css"))) ==> selective_static_file_only its wrong way
    > app.use("/myCssPath",express.static(join(process.cwd(), "css"))) ==> selective_static_file_only using virtual way
        <style src="myCssPath/style1.css"><style>

# Static Files:
    - Static files are files that don't change when your application is running, such as images, CSS files, and JavaScript files,
    - They aren't dynamically generated by your web server.
    - WebSite design, FrontEnd JS code, Web_BG_Images, etc.
    - Most common static files in your Web App are Cascading Style Sheets, CSS, JavaScript, Images.

# Serve static files from Static_Folder using ExpressJS:
    - using express_built-int_middleware_function called static: express.static()
        > express.static(root, [option])
            - root: path to your Static_Folder.
            - options is for dot files: .htaccess, etc.
    - WKT, to use any middleware we have server.use() function.
    - To use multiple static_assets_directories, call the express.static middleware function multiple times:
        > app.use(express.static('public'))
        > app.use(express.static('files'))
    - To create a virtual path prefix (where the path does not actually exist in the file system) for files that are served by the express.static function, specify a mount path for the static directory, as shown below:
        > app.use('/static', express.static('public'))
    - However, the path that you provide to the express.static function is relative to the directory from where you launch your node process. If you run the express app from another directory, itâ€™s safer to use the absolute path of the directory that you want to serve:
        > const path = require('path')
        > app.use('/static', express.static(path.join(__dirname, 'public')))

# Static file's folder structure:
    - Project
        - package.json
        - server.js
        - public_static_assets
            - images
            - javascript
            - css
        - templates_views
        - routes

# Url:
    - http://localhost:3000/images/kitten.jpg
    - http://localhost:3000/css/style.css
    - http://localhost:3000/js/app.js

* src/app3.js ==> Send/Serve static HTML file(public/index.html) as a Response, dynamically. ~ using middleware
